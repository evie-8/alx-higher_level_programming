# creating docummentation for add_integer function

*************************************
   How add_integer function works
*************************************

This module takes two numbers and returns their sum
Usage: add_integer(a, b=98)
NOTE: if number passes is a float we convert it to an integer

***************
TEST ON NUMBERS
***************
>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(2, 3)
5

>>> add_integer(2, -3)
-1

>>> add_integer(2.5, 3)
5

>>> add_integer(-2.5, -3.5)
-5

>>> add_integer(-2, -3)
-5

>>> add_integer(3, -2)
1

>>> add_integer(6)
104

****************
TESTS ON STRINGS
****************

>>> add_integer("hi", 3)
Traceback (most recent call last):
TypeError: a must be an integer


>>> add_integer("hi", "h")
Traceback (most recent call last):
TypeError: a must be an integer


>>> add_integer(2, "eve")
Traceback (most recent call last):
TypeError: b must be an integer


>>> add_integer(None)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(3, None)
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer(None, None)
Traceback (most recent call last):
TypeError: a must be an integer

***********
INFINITY
**********

>>> add_integer(float('inf'))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer

>>> add_integer(3, float('inf'))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer
